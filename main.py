import sys
import keyboard
import pyautogui
from PySide6 import QtWidgets, QtGui, QtCore
# from PySide6.QtWidgets import QApplication, QLabel, QWidget
from PySide6.QtCore import Qt, QTimer, QObject, Slot, QMetaObject


# –ü—É—Ç—å –∫ –≤–∞—à–µ–π –∫–∞—Ä—Ç–∏–Ω–∫–µ
IMAGE_PATH = r"marker.png"

last_window = None


def show_image_at_mouse():
    global last_window

    x, y = pyautogui.position()

    app = QtWidgets.QApplication.instance()
    if not app:
        return

    if last_window:
        last_window.close()
        last_window = None

    window = QtWidgets.QWidget()
    window.setWindowFlags(Qt.FramelessWindowHint | Qt.WindowStaysOnTopHint)
    window.setAttribute(Qt.WA_TranslucentBackground)

    label = QtWidgets.QLabel(window)
    pixmap = QtGui.QPixmap(IMAGE_PATH)

    if pixmap.isNull():
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")
        return

    label.setPixmap(pixmap)
    window.resize(pixmap.size())

    screen_width, screen_height = pyautogui.size()
    pos_x = max(0, min(x - pixmap.width() // 2, screen_width - pixmap.width()))
    pos_y = max(0, min(y - pixmap.height() // 2, screen_height - pixmap.height()))

    window.move(pos_x, pos_y)

    def close_window():
        window.close()
        global last_window
        last_window = None

    def mouse_event(event):
        close_window()

    def key_event(event):
        if event.key() == Qt.Key_Escape:
            close_window()

    window.mousePressEvent = mouse_event
    window.keyPressEvent = key_event

    window.show()
    QtCore.QTimer.singleShot(1000, close_window)  # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–∫—Ä—ã—Ç–∏–µ —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—ã

    last_window = window


class GlobalHotkeyHandler(QtCore.QObject):
    @Slot()
    def on_f2(self):
        QMetaObject.invokeMethod(self, "show_image", Qt.QueuedConnection)

    @Slot()
    def show_image(self):
        show_image_at_mouse()


def exit_on_esc():
    print("üö™ –ù–∞–∂–∞—Ç–∞ –∫–ª–∞–≤–∏—à–∞ Esc. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã.")
    app = QtWidgets.QApplication.instance()
    if app:
        app.quit()


# –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫
if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    app.setQuitOnLastWindowClosed(False)  # ‚¨ÖÔ∏è –í–æ—Ç –∫–ª—é—á–µ–≤–æ–π –º–æ–º–µ–Ω—Ç!

    # –°–æ–∑–¥–∞–µ–º –∏ –ø—Ä—è—á–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –æ–∫–Ω–æ, —á—Ç–æ–±—ã GUI –Ω–µ –∑–∞–∫—Ä—ã–ª—Å—è —Å–∞–º
    main_window = QtWidgets.QWidget()
    main_window.hide()

    handler = GlobalHotkeyHandler()

    print("üü¢ –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–ø—É—â–µ–Ω–∞. –ù–∞–∂–º–∏—Ç–µ F2 –¥–ª—è –ø–æ–∫–∞–∑–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è.")
    print("‚ÑπÔ∏è –ù–∞–∂–º–∏—Ç–µ Esc –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã.")

    keyboard.add_hotkey('F2', handler.on_f2)
    keyboard.add_hotkey('Esc', exit_on_esc)

    try:
        sys.exit(app.exec())
    except Exception as e:
        print("üî¥ –û—à–∏–±–∫–∞:", e)